1, Inode
Inode – это структура данных в файловой системе Linux. Она хранит всю доступную информацию о файле, за исключением имени и фактических данных, хранящихся в файле.

2. hardlink vs softlink
а) Жесткая ссылка не может быть создана для каталогов. Жесткая ссылка может быть создана только для файла.
б) Символические ссылки или симлинки могут ссылаться на каталог.
в) удаление исходного файла, на который указывает твоя жесткая ссылка, не удаляет саму жесткую ссылку; Жесткая ссылка по-прежнему предоставляет содержимое основного файла.
г) Если вы удалите жесткую ссылку или символическую ссылку, исходный файл останется без изменений.
e) Удаление исходного файла не удаляет вложенную символическую ссылку, но без исходного файла символическая ссылка бесполезна

3. Состояния процесса
Существует 4 состояния процесса, а именно: Запуск, ожидание, остановка и зомби.

4. Зомби процессы
Каждый процесс может запускать дочерние процессы с помощью функции fork. Такие процессы остаются под контролем родительского процесса и не могут быть завершены 
без его ведома. Если один из дочерних процессов всё же завершился, а его родительский процесс не смог получить об этом информацию, 
то такой дочерний процесс становится зомби.

5. SeLinux
SELinux – это аббревиатура от Security-enhanced Linux.Это реализация контроля доступа и функция безопасности для ядра Linux.
Он предназначен для защиты сервера от неправильной настройки и / или скомпрометированных демонов.
Он устанавливает ограничения и инструктирует серверные демоны или программы, к каким файлам они могут обращаться и какие действия они могут предпринимать, 
определяя политику безопасности.

6. swap
Swap – это дополнительное пространство, которое используется, когда физическая память (оперативная) заполнена. Неактивные страницы и ненужные данные 
перемещаются в раздел подкачки, когда в оперативной памяти требуется больше памяти.

7. LILO
Linux Loader, – это небольшая программа, которая управляет двойной загрузкой

8. Как искать пакет в репозитории?
apt-cache search nodejs

9. Что делают следующие команды и как вы можете их использовать: tee, awk, tr, cut, tac, curl, wget, watch, head, tail
- tee — читает со стандартного ввода (stdin) и выводит на стандартный вывод (stdout) и в указанный файл. Очень удобно когда вашему скрипту нужно и лог писать, 
  и интерактивно сообщения на экран отправлять
- awk — потоковый редактор который помогает управлять текстом при выводе. Я например использую его для удобного оперирования многоколоночным текстом.
- tr — утилита для управления символами во входящем потоке текста. Подставлять или удаляет указанные символы
- cut — утилита обработки текста, позволяющая выбирать колонки из текста или поля из строки
- tac — команда, обратная команде cat — выводит файл (или конкатенацию файлов) но задом-наперед
- curl клиентская программа для взаимодействия с серверами, поддерживающими формат url обращений, обычно веб серверами. Лично я применяю ее как консольный клиент 
  для работы с веб серверами- проверить доступность, статус, дернуть api и тд.
- wget — утилита для сетевой загрузки файлов.
- watch — утилита позволяющая отслеживать вывод не интерактивной программы, запуская ее многократно, с указанным интервалом времени. Удобно когда вы хотите 
  посмотреть какой то процесс в динамике — например “watch cat /proc/mdstat”
- head — утилита обработки текста. Вывод указанное число строк с начала файла
- tail утилита обработки текста. Вывод указанное число строк с конца файла. Может работать в режиме постоянного чтения и вывода на экран информации, 
  дописываемой другим процессом в конец файла. Удобно смотреть логи в режиме реального времени

10. Что сделает символ &, введенный сразу после команды? 
Запустить nohup 

11. Load Average
Параметр, определяющий среднюю нагрузку на систему за период времени (1 мин, 5 минут, 15 минут). Изменяется в количестве задач на 
одно ядро процессора. 

